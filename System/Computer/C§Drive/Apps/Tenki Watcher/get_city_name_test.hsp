;---------------------------------------------------------------------------------------------------

;注：これは都市名の取得のテスト用に作ったもので、このソースはTenki Watcher本体では一切使いません。

;---------------------------------------------------------------------------------------------------
	
	objsize 200, 20
	search_word_old = ""
	
	input search_word_old
	button"OK",*get
	
	stop
	
*get
	color 255, 255, 255 : boxf
	
	color
	
	pos 0, 0
	
	city_name = ""
	city_name_2 = ""
	
	;地名の日本名がcities.txtにあった場合、日本語の地名に変換
	notesel cities
	noteload "data/cities.txt"
	cities_total = notemax
	
	;同じ市内にまたは都道府県内に同じ地名が2つ以上ある場合（市町村名）
	if instr( search_word_old , 0, "市" ) ! -1 or instr( search_word_old , 0, "区" ) ! -1 or instr( search_word_old , 0, "町" ) ! -1 or instr( search_word_old , 0, "村" ) ! -1 {
	
		prefecture = ""			;都道府県（州）
		municipality = ""		;市町村
		municipality_ward = ""	;区

		if instr ( search_word_old, 0, "都" ) ! -1 {
			prefecture = strmid( search_word_old, 0, instr( search_word_old, 0, "都" ) + 2 )
		}
		if instr ( search_word_old, 0, "道" ) ! -1 {
			prefecture = strmid( search_word_old, 0, instr( search_word_old, 0, "道" ) + 2 )
		}
		if instr ( search_word_old, 0, "府" ) ! -1 {
			prefecture = strmid( search_word_old, 0, instr( search_word_old, 0, "府" ) + 2 )
		}
		if instr ( search_word_old, 0, "県" ) ! -1 {
			prefecture = strmid( search_word_old, 0, instr( search_word_old, 0, "県" ) + 2 )
		}
	
		if instr ( search_word_old, 0, "州" ) ! -1 {
			prefecture = strmid( search_word_old, 0, instr( search_word_old, 0, "州" ) + 2 )
		}
	
		if prefecture ! "" {
			
			if instr ( search_word_old, 0, "市" ) ! -1 {
				municipality = strmid ( search_word_old, strlen( prefecture ), instr( search_word_old, 0, "市" ) - strlen( prefecture ) + 2 )
			}
			if instr ( search_word_old, 0, "町" ) ! -1 {
				municipality = strmid ( search_word_old, strlen( prefecture ), instr( search_word_old, 0, "町" ) - strlen( prefecture ) + 2 )
			}
			if instr ( search_word_old, 0, "村" ) ! -1 {
				municipality = strmid ( search_word_old, strlen( prefecture ), instr( search_word_old, 0, "村" ) - strlen( prefecture ) + 2 )
			}
			
			if instr ( search_word_old, 0, "区" ) ! -1 {
				if instr( search_word_old, 0, "市" ) ! -1 {
					municipality_ward = strmid ( search_word_old, strlen( prefecture ) + strlen( municipality ), instr( search_word_old, 0, "区" ) + 2 )
				}else{
					municipality_ward = strmid ( search_word_old, strlen( prefecture ), instr( search_word_old, 0, "区" ) + 2 )
				}
			}
			
		}else{
		
			if instr ( search_word_old, 0, "市" ) ! -1 {
				municipality = strmid ( search_word_old, 0, instr( search_word_old, 0, "市" ) + 2 )
			}
			if instr ( search_word_old, 0, "町" ) ! -1 {
				municipality = strmid ( search_word_old, 0, instr( search_word_old, 0, "町" ) + 2 )
			}
			if instr ( search_word_old, 0, "村" ) ! -1 {
				municipality = strmid ( search_word_old, 0, instr( search_word_old, 0, "村" ) + 2 )
			}
			
			if instr ( search_word_old, 0, "区" ) ! -1 {
				if instr( search_word_old, 0, "市" ) ! -1 {
					municipality_ward = strmid ( search_word_old, strlen( municipality ), instr( search_word_old, 0, "区" ) + 2 )
				}else{
					municipality_ward = strmid ( search_word_old, 0, instr( search_word_old, 0, "区" ) + 2 )
				}
			}
						
		}
	
		search_word_old = ""+prefecture+""+municipality+""+municipality_ward+""
		
	}
	
		sdim searched_city_name, cities_total
		sdim searched_city_name_2, cities_total
	
		ci = 0
	
		repeat cities_total
		
			notesel cities
			noteget cities_line, cnt
			
			split cities_line, ", ", searched_city_name.cnt, not_use, searched_city_name_2.cnt
				
			;検索された地名と出てきた地名が一致するか確認（地点名）
			if instr( searched_city_name.cnt, 0, search_word_old ) ! -1 and instr( cities_line, 0, "[" ) = -1 {
				split cities_line, ", ", ci_city_name.ci, ci_city_q.ci, ci_city_name_2.ci
				ci++
			}
	
			;検索された地名と出てきた地名が一致するか確認（都道府県名または市区町村名）
			if instr( searched_city_name_2.cnt, 0, search_word_old ) ! -1 {
				split cities_line, ", ", ci_city_name.ci, ci_city_q.ci, ci_city_name_2.ci
				ci++
			}
	
			if municipality ! "" or municipality_ward ! "" {
				;検索された地名と出てきた地名が一致するか確認（区名で検索され、かつ何処の市区か判定できる場合）
				if instr( searched_city_name_2.cnt, 0, municipality ) ! -1 and instr( searched_city_name_2.cnt, 0, municipality_ward ) ! -1 {
					split cities_line, ", ", ci_city_name.ci, ci_city_q.ci, ci_city_name_2.ci
					ci++
				}
				;検索された地名と出てきた地名が一致するか確認（市町村名で検索され、かつ何処の市町村か判定できる場合）
			}else : if munidipality ! "" {
					if instr( searched_city_name_2.cnt, 0, municipality ) ! -1 {
					split cities_line, ", ", ci_city_name.ci, ci_city_q.ci, ci_city_name_2.ci
					ci++
				}
			}
	
			title""+searched_city_name_2.cnt+" / "+ci+""
		
			await 1
		loop
		
		checked_city_name = 1
		
		;日本語訳が復数見つかった場合
		if ci >= 2 {
			
			sdim searched_city_name_3, ci
	
			if instr( search_word_old, 0, "市" ) ! -1 or instr( search_word_old, 0, "区" ) ! -1 or instr( search_word_old, 0, "町" ) ! -1 or instr( search_word_old, 0, "村" ) ! -1 {
	
				;市区町村名で検索された場合
				;見つかった都市の優先順位を検出
				repeat ci
					priority = strmid( ci_city_name_2.cnt, instr( ci_city_name_2.cnt, 0, "#" ) + 1, 1 )
					priority = int( priority )
					
					searched_city_name_3.priority = ci_city_name_2.cnt
		
					await 1
				loop
		
				;優先順位順に検索された地名と一致するか確認
				repeat ci
				
					if instr( search_word_old, 0, "区" ) ! -1 {
						
						if instr( searched_city_name_3.cnt, 0, municipality_ward ) ! -1 {
							city_name_2 = searched_city_name_3.cnt
						}
						
					}
		
					await 1
				loop
		
				if city_name = ""   : city_name = ci_city_name.0
				if city_q = ""      : city_q = ci_city_q.0
				if city_name_2 = "" : city_name_2 = ci_city_name_2.0
	
			}else{
	
				;市区町村名以外（地点名など）で検索された場合
				;1文字目と最後の文字が一致するかしないかで一番的確な地点名を検索
				repeat ci
				
					if strmid( search_word_old, 0, 2 ) = strmid( ci_city_name.cnt, 0, 2 ) and strmid( search_word_old, -1, 2 ) = strmid( ci_city_name.cnt, -1, 2 ) {
						
						city_name = ci_city_name.cnt
						city_q = ci_city_q.cnt
						city_name_2 = ci_city_name_2.cnt
		
					}
		
					await 1
				loop
	
				;どれも1文字目と最後の文字が一致しなかった場合
				if city_name = "" {
					
					;候補の内、★マーク（都道府県内で迷ったらこれにしとけのサイン）がある地点を探す
					repeat ci
	
						if instr( ci_city_name.cnt, 0, "★" ) ! -1 {
							city_name = ci_city_name.cnt
							city_q = ci_city_q.cnt
							city_name_2 = ci_city_name_2.cnt
						}
	
						await 1
	
					loop
	
					;★マークのある地点が見つからなかった場合
					if city_name = "" {
						city_name = ci_city_name.0
						city_q = ci_city_q.0
						city_name_2 = ci_city_name_2.0
					}
	
				}
			
			}
			
	
		}
	
		;一つだけ見つかった場合
		if ci = 1 {
			city_name = ci_city_name.0
			city_q = ci_city_q.0
			city_name_2 = ci_city_name_2.0
		}
			
		;そもそも日本語名が見つからなかった場合
		if ci = 0 {
			city_name = city_name_on_xml
		}
	
		pos 10,100
	
		mes ""+city_name+"\n"+city_name_2+""